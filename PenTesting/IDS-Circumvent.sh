#! /bin/bash

## Time of script start
start=`date +%s`

## create functions for output
ok_text(){
  echo -e "[  \033[0;32mOK\033[0m  ] "$1
}

info_text(){
  echo -e "[ \033[0;34mINFO\033[0m ] "$1
}

error_text(){
  echo -e "[ \033[0;31mFAIL\033[0m ] "$1
}

change_ip(){
  $(ifconfig $1 $2 netmask 255.255.255.0)
  dhclient &> /dev/null
}

file_write(){
  echo $1 >> $2.txt
}

clear

## Check if sudo is running (because of ping interval)
if [ "$EUID" -ne 0 ]
  then error_text "Please run as root"
  exit
fi

# Generate an array of all possible IP conbinations
Hosts=($(seq 1 254))

# Get the systems network adapter
adapterR=$(ip -o link show | awk '{print $2,$9}' | grep UP)
adapter=${adapterR%:*}
fileNameR=`basename $0`
fileName=${fileNameR%.*}

# Get the system's IP address
IP=$(hostname -I)

## Concat this to the network prefix
address=${IP%.*}.

## Create 2 arrays to hold alive and dead hosts
aHosts=()
targets=()

## Ports to test
ports=(21 22 23 53 79 80 123)

for host in ${Hosts[@]}; do
# Create the IP to test
  hostIP=$address$host

ok_text "Testing host : "$hostIP

## Ping host and see if "errors" in output, 1 if yes, 0 of no
## (ping will wait 167ms before aborting scan, this means 3 hosts are scanned in 501ms
## evading the IDS as closly as possible)
if [ $hostip -ne $IP ] 
then
   check=$(ping -c 1 -i 0.167 $hostIP | grep errors | wc -l)

  ## If the host is alive, add to targets, if not add to available hosts
   if [ $check -eq 0 ]
   then
     targets+=($hostIP)
   else
    aHosts+=($hostIP)
   fi
  fi
done

info_text "Scanning identified targets"

for t in ${targets[@]}; do
  for p in ${ports[@]}; do
    change_ip $adapter ${aHosts[$RANDOM % ${#aHosts[@]} ] }

    portScan=$(nmap -p $p $t | grep open | wc -l)

    if [ $portScan -eq 1 ]
    then
      ok_text "Port "$p" on host "$t" is available"
      echo "$t : $p" >> "$fileName-output.txt"
    fi
  done
done

ok_text "Scan complete, reverting to origional IP"
## Revert to origional IP address
change_ip $adapter $IP

end=`date +%s`

ok_text "Finished, time took: "$((end-start))"s"
